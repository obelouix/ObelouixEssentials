import org.apache.tools.ant.filters.ReplaceTokens
import org.apache.tools.ant.taskdefs.condition.Os
import org.jetbrains.gradle.ext.Remote

plugins {
    id 'java'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0"
    id "de.undercouch.download" version "4.1.1"
}

group = 'fr.obelouix'
version = '1.0-SNAPSHOT'

sourceCompatibility = "16"
targetCompatibility = "16"
//see https://www.spigotmc.org/wiki/intellij-debug-your-plugin/
libsDirName = '../server/plugins'
ext {
    paperURL = 'https://papermc.io/api/v2/projects/paper/versions/1.16.5/builds/655/downloads/paper-1.16.5-655.jar'
    paperVersion = '1.16.5-655'
}


repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'io.papermc:paperlib:1.0.6'
    implementation 'net.luckperms:api:5.3'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter(ReplaceTokens, tokens: ['version': project.version])
    }
}

/**
 * this task will setup the server folder
 */
task setupServer(type: Download) {
    new File("$projectDir", "server").mkdir()
    src "${paperURL}"
    dest "/server"
    overwrite false
    new File("$projectDir/server", "eula.txt").text = "eula=true"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        new File("$projectDir/server", "launch.bat").text = "java -Xmx2G -Xms2G -agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5005,suspend=y -jar .\\paper-${paperVersion}.jar nogui"
    } else {
        new File("$projectDir/server", "launch.sh").text = "java -Xmx2G -Xms2G -agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5005,suspend=y -jar ./paper-${paperVersion}.jar nogui"
    }
}

/**
 * This, will create the debug task
 */
idea {
    project {
        settings {
            taskTriggers {
                afterSync tasks.getByName("projects"), tasks.getByName("setupServer")
            }
            runConfigurations {
                "PaperMC Server"(Remote) {
                    mode = Remote.RemoteMode.LISTEN
                    host = "localhost"
                    port = 5005
                }
            }
        }
    }
}

