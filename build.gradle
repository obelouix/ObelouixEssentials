import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id "xyz.jpenilla.run-paper" version "1.0.3"
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

group 'fr.obelouix'
version '1.0-SNAPSHOT'

sourceCompatibility = "16"
targetCompatibility = "16"

repositories {
    mavenCentral()

    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
    maven {
        name ='ProtocolLib'
        url = 'https://repo.dmulloy2.net/repository/public/'
    }

    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }

}

dependencies {

    compileOnly 'io.papermc.paper:paper-api:1.17-R0.1-SNAPSHOT'
    implementation 'io.papermc:paperlib:1.0.6'
    compileOnly 'net.luckperms:api:5.3'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0-SNAPSHOT'
    implementation 'org.spongepowered:configurate-core:4.1.1"'
    implementation 'org.spongepowered:configurate-yaml:4.1.1'

    //test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.17")
    }
}

shadowJar{
    mergeServiceFiles()
    relocate "io.papermc.lib", "fr.obelouix.paperlib"
    relocate "org.spongepowered", "fr.obelouix.spongepowered"
    relocate "org.yaml.snakeyaml", "fr.obelouix.snakeyaml"
    relocate "io.leangen.geantyref", "fr.obelouix.geantyref"
}

jar{
    enabled(false)
}

processResources{
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter(ReplaceTokens, tokens: ['version': project.version])
    }
}

shadowJar.dependsOn(processResources)
assemble.dependsOn(shadowJar)